// -*- Java -*- This Cup file was machine-generated by BNFC
package com.biosimilarity.GraphL.model.GraphL;

parser code {:
  public com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExpr pGraphExpr() throws Exception
  {
	java_cup.runtime.Symbol res = parse();
	return (com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExpr) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
	report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
	throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExpr GraphExpr;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExpr GraphExpr1;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExpr GraphExpr2;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Formals Formals;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Actuals Actuals;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.SelectionExpr SelectionExpr;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexSelectionExpr VertexSelectionExpr;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Comprehension Comprehension;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexComprehension VertexComprehension;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeComprehension EdgeComprehension;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphComprehension GraphComprehension;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexBinding VertexBinding;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeBinding EdgeBinding;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphBinding GraphBinding;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Binding Binding;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexGenerator VertexGenerator;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeGenerator EdgeGenerator;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphGenerator GraphGenerator;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Generator Generator;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExpr VertexExpr;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExpr VertexExpr1;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExpr VertexExpr2;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexDeconstructor VertexDeconstructor;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexActual VertexActual;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExpr EdgeExpr;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgePlus EdgePlus;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeLabel EdgeLabel;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExprPattern EdgeExprPattern;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeActual EdgeActual;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeDeconstructor EdgeDeconstructor;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphDeconstructor GraphDeconstructor;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphDeconstructor GraphDeconstructor1;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphDeconstructor GraphDeconstructor2;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.LogicalOrDecl LogicalOrDecl;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Satisfaction Satisfaction;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Decl Decl;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexCollection VertexCollection;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeCollection EdgeCollection;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphCollection GraphCollection;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExtension VertexExtension;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExtension EdgeExtension;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExtension GraphExtension;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExtensionBuiltin VertexExtensionBuiltin;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExtensionBuiltin EdgeExtensionBuiltin;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExtensionBuiltin GraphExtensionBuiltin;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Condition Condition;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Condition Condition1;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Condition Condition2;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.StructureCondition StructureCondition;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.StructureCondition StructureCondition1;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.StructureCondition StructureCondition2;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexStructureCondition VertexStructureCondition;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexStructureCondition VertexStructureCondition1;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexStructureCondition VertexStructureCondition2;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeLabelCondition EdgeLabelCondition;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GroundCondition GroundCondition;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.VertexBuiltin VertexBuiltin;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.GraphBuiltin GraphBuiltin;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.AtomicFormula AtomicFormula;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListLogicalOrDecl ListLogicalOrDecl;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListCondition ListCondition;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertex ListVertex;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListEdge ListEdge;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertexActual ListVertexActual;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListEdgeActual ListEdgeActual;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListGraphExpr ListGraphExpr;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListLIdent ListLIdent;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListBinding ListBinding;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertexBinding ListVertexBinding;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Edge Edge;
nonterminal com.biosimilarity.GraphL.model.GraphL.Absyn.Vertex Vertex;

terminal _SYMB_0;    //   |
terminal _SYMB_1;    //   (
terminal _SYMB_2;    //   ,
terminal _SYMB_3;    //   )
terminal _SYMB_4;    //   =
terminal _SYMB_5;    //   <
terminal _SYMB_6;    //   >
terminal _SYMB_7;    //   ;
terminal _SYMB_8;    //   {
terminal _SYMB_9;    //   }
terminal _SYMB_10;    //   <-
terminal _SYMB_11;    //   +
terminal _SYMB_12;    //   *
terminal _SYMB_13;    //   -
terminal _SYMB_14;    //   ?(
terminal _SYMB_15;    //   <?
terminal _SYMB_16;    //   ?>
terminal _SYMB_17;    //   [
terminal _SYMB_18;    //   ]
terminal _SYMB_19;    //   {@
terminal _SYMB_20;    //   @}
terminal _SYMB_21;    //   {-
terminal _SYMB_22;    //   -}
terminal _SYMB_23;    //   {*
terminal _SYMB_24;    //   *}
terminal _SYMB_25;    //   &
terminal _SYMB_26;    //   ||
terminal _SYMB_27;    //   <??
terminal _SYMB_28;    //   ??>
terminal _SYMB_29;    //   ??(
terminal _SYMB_30;    //   '
terminal _SYMB_31;    //   ~
terminal _SYMB_32;    //   ((
terminal _SYMB_33;    //   ))
terminal _SYMB_34;    //   [[
terminal _SYMB_35;    //   ]]
terminal _SYMB_36;    //   Nil
terminal _SYMB_37;    //   components
terminal _SYMB_38;    //   edges
terminal _SYMB_39;    //   empty
terminal _SYMB_40;    //   false
terminal _SYMB_41;    //   in
terminal _SYMB_42;    //   let
terminal _SYMB_43;    //   null
terminal _SYMB_44;    //   rec
terminal _SYMB_45;    //   sink
terminal _SYMB_46;    //   sinks
terminal _SYMB_47;    //   source
terminal _SYMB_48;    //   sources
terminal _SYMB_49;    //   true
terminal _SYMB_50;    //   vertices

terminal String _STRING_;

terminal Integer _INTEGER_;



terminal String UIdent;
terminal String LIdent;
terminal String Wild;


start with GraphExpr;


GraphExpr ::= GraphExpr:p_1 _SYMB_0 GraphExpr1:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Isolated(p_1,p_3); :} 
  | GraphExpr1:p_1  {: RESULT = p_1; :}
;
GraphExpr1 ::= SelectionExpr:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Selected(p_1); :} 
  | EdgePlus:p_1 _SYMB_1 VertexSelectionExpr:p_3 _SYMB_2 VertexSelectionExpr:p_5 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Connected(p_1,p_3,p_5); :}
  | _SYMB_1 _SYMB_44 UIdent:p_3 Formals:p_4 _SYMB_4 GraphExpr2:p_6 _SYMB_3 Actuals:p_8  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Recursed(p_3,p_4,p_6,p_8); :}
  | GraphExpr2:p_1  {: RESULT = p_1; :}
;
GraphExpr2 ::= _SYMB_5 Vertex:p_2 _SYMB_6  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Pointed(p_2); :} 
  | UIdent:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Variable(p_1); :}
  | UIdent:p_1 Actuals:p_2  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Applied(p_1,p_2); :}
  | _SYMB_36  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Empty(); :}
  | _SYMB_1 GraphExpr:p_2 _SYMB_3  {: RESULT = p_2; :}
;
Formals ::= _SYMB_1 ListLIdent:p_2 _SYMB_7 ListLIdent:p_4 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.FormalsFullForm(p_2,p_4); :} 
  | _SYMB_1 ListLIdent:p_2 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.FormalsVertexForm(p_2); :}
;
Actuals ::= _SYMB_5 ListVertexActual:p_2 _SYMB_7 ListEdgeActual:p_4 _SYMB_6  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ActualsFullForm(p_2,p_4); :} 
  | _SYMB_5 ListVertexActual:p_2 _SYMB_6  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ActualsVertexForm(p_2); :}
;
SelectionExpr ::= _SYMB_42 ListBinding:p_2 _SYMB_41 GraphExpr2:p_4  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Selection(p_2,p_4); :} 
  | Comprehension:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ComprehensionExpr(p_1); :}
;
VertexSelectionExpr ::= _SYMB_42 ListVertexBinding:p_2 _SYMB_41 GraphExpr2:p_4  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexSelection(p_2,p_4); :} 
  | VertexComprehension:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexIntensionSelection(p_1); :}
;
Comprehension ::= _SYMB_8 Generator:p_2 _SYMB_0 ListLogicalOrDecl:p_4 _SYMB_9  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ComprehensionForm(p_2,p_4); :} 
;
VertexComprehension ::= _SYMB_8 VertexGenerator:p_2 _SYMB_0 ListLogicalOrDecl:p_4 _SYMB_9  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexComprehensionForm(p_2,p_4); :} 
;
EdgeComprehension ::= _SYMB_8 EdgeGenerator:p_2 _SYMB_0 ListLogicalOrDecl:p_4 _SYMB_9  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeComprehensionForm(p_2,p_4); :} 
;
GraphComprehension ::= _SYMB_8 GraphGenerator:p_2 _SYMB_0 ListLogicalOrDecl:p_4 _SYMB_9  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphComprehensionForm(p_2,p_4); :} 
;
VertexBinding ::= VertexDeconstructor:p_1 _SYMB_4 Vertex:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.LRBoundVertex(p_1,p_3); :} 
;
EdgeBinding ::= EdgeDeconstructor:p_1 _SYMB_4 EdgeExpr:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.LRBoundEdge(p_1,p_3); :} 
;
GraphBinding ::= GraphDeconstructor:p_1 _SYMB_4 GraphExpr:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.LRBoundGraph(p_1,p_3); :} 
;
Binding ::= VertexBinding:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.BoundVertex(p_1); :} 
  | EdgeBinding:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.BoundEdge(p_1); :}
  | GraphBinding:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.BoundGraph(p_1); :}
;
VertexGenerator ::= VertexDeconstructor:p_1 _SYMB_10 VertexCollection:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.LRGenVertex(p_1,p_3); :} 
;
EdgeGenerator ::= EdgeDeconstructor:p_1 _SYMB_10 EdgeCollection:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.LRGenEdge(p_1,p_3); :} 
;
GraphGenerator ::= GraphDeconstructor:p_1 _SYMB_10 GraphCollection:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.LRGenGraph(p_1,p_3); :} 
;
Generator ::= VertexGenerator:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GenVertex(p_1); :} 
  | EdgeGenerator:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GenEdge(p_1); :}
  | GraphGenerator:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GenGraph(p_1); :}
;
VertexExpr ::= VertexExpr:p_1 _SYMB_11 VertexExpr1:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexSum(p_1,p_3); :} 
  | VertexExpr1:p_1  {: RESULT = p_1; :}
;
VertexExpr1 ::= VertexExpr1:p_1 _SYMB_12 VertexExpr2:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexMult(p_1,p_3); :} 
  | VertexExpr2:p_1  {: RESULT = p_1; :}
;
VertexExpr2 ::= Vertex:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexLiteral(p_1); :} 
  | LIdent:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexVariable(p_1); :}
  | _SYMB_13 VertexExpr2:p_2  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexNegated(p_2); :}
  | _SYMB_1 VertexExpr:p_2 _SYMB_3  {: RESULT = p_2; :}
;
VertexDeconstructor ::= VertexExpr:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExprLabel(p_1); :} 
;
VertexActual ::= VertexExpr:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexActualized(p_1); :} 
;
EdgeExpr ::= Edge:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExprNominal(p_1); :} 
  | Edge:p_1 _SYMB_1 VertexExpr:p_3 _SYMB_2 VertexExpr:p_5 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExprStruct(p_1,p_3,p_5); :}
;
EdgePlus ::= Edge:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeName(p_1); :} 
  | Wild:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeWildcard(p_1); :}
;
EdgeLabel ::= Edge:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeLiteral(p_1); :} 
  | LIdent:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeVariable(p_1); :}
;
EdgeExprPattern ::= EdgeLabel:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExprLabel(p_1); :} 
  | EdgeDeconstructor:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgePatternStruct(p_1); :}
;
EdgeActual ::= EdgeLabel:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeActualized(p_1); :} 
;
EdgeDeconstructor ::= EdgeLabel:p_1 _SYMB_14 VertexDeconstructor:p_3 _SYMB_2 VertexDeconstructor:p_5 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgePatternDecon(p_1,p_3,p_5); :} 
;
GraphDeconstructor ::= GraphDeconstructor:p_1 _SYMB_12 GraphDeconstructor1:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphIsolatedPattern(p_1,p_3); :} 
  | GraphDeconstructor1:p_1  {: RESULT = p_1; :}
;
GraphDeconstructor1 ::= _SYMB_15 VertexDeconstructor:p_2 _SYMB_16  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphPointedPattern(p_2); :} 
  | EdgeLabel:p_1 _SYMB_14 GraphDeconstructor2:p_3 _SYMB_2 GraphDeconstructor2:p_5 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphConnectedPattern(p_1,p_3,p_5); :}
  | GraphDeconstructor2:p_1  {: RESULT = p_1; :}
;
GraphDeconstructor2 ::= GraphExpr:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphLiteral(p_1); :} 
  | _SYMB_17 GraphDeconstructor:p_2 _SYMB_18  {: RESULT = p_2; :}
;
LogicalOrDecl ::= Satisfaction:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.JudgmentExpr(p_1); :} 
  | Decl:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.DeclIn(p_1); :}
;
Satisfaction ::= VertexDeconstructor:p_1 _SYMB_41 VertexStructureCondition:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexJudgement(p_1,p_3); :} 
  | EdgeDeconstructor:p_1 _SYMB_41 EdgeLabelCondition:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeJudgement(p_1,p_3); :}
  | GraphDeconstructor:p_1 _SYMB_41 Condition:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphJudgement(p_1,p_3); :}
;
Decl ::= Generator:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GeneratorDecl(p_1); :} 
  | _SYMB_42 Binding:p_2  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.LocalDecl(p_2); :}
;
VertexCollection ::= VertexComprehension:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexIntension(p_1); :} 
  | VertexExtension:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExtenionExpr(p_1); :}
;
EdgeCollection ::= EdgeComprehension:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeIntension(p_1); :} 
  | EdgeExtension:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExtenionExpr(p_1); :}
;
GraphCollection ::= GraphComprehension:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphIntension(p_1); :} 
  | GraphExtension:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExtenionExpr(p_1); :}
;
VertexExtension ::= _SYMB_19 ListVertex:p_2 _SYMB_20  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExtensionForm(p_2); :} 
  | VertexExtensionBuiltin:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexExtensionBuiltinExpr(p_1); :}
;
EdgeExtension ::= _SYMB_21 ListEdge:p_2 _SYMB_22  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExtensionForm(p_2); :} 
  | EdgeExtensionBuiltin:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeExtensionBuiltinExpr(p_1); :}
;
GraphExtension ::= _SYMB_23 ListGraphExpr:p_2 _SYMB_24  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExtensionForm(p_2); :} 
  | GraphExtensionBuiltin:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphExtensionBuiltinExpr(p_1); :}
;
VertexExtensionBuiltin ::= _SYMB_50 _SYMB_1 GraphExpr:p_3 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexSet(p_3); :} 
  | _SYMB_48 _SYMB_1 GraphExpr:p_3 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.SourceSet(p_3); :}
  | _SYMB_46 _SYMB_1 GraphExpr:p_3 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.SinkSet(p_3); :}
;
EdgeExtensionBuiltin ::= _SYMB_38 _SYMB_1 GraphExpr:p_3 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeSet(p_3); :} 
;
GraphExtensionBuiltin ::= _SYMB_37 _SYMB_1 GraphExpr:p_3 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphComponents(p_3); :} 
;
Condition ::= Condition:p_1 _SYMB_25 Condition1:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ConjunctionCondition(p_1,p_3); :} 
  | Condition1:p_1  {: RESULT = p_1; :}
;
Condition1 ::= Condition1:p_1 _SYMB_26 Condition2:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.DisjunctionCondition(p_1,p_3); :} 
  | Condition2:p_1  {: RESULT = p_1; :}
;
Condition2 ::= StructureCondition:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.StructuralCondition(p_1); :} 
  | GroundCondition:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.BaseCondition(p_1); :}
  | _SYMB_1 Condition:p_2 _SYMB_3  {: RESULT = p_2; :}
;
StructureCondition ::= StructureCondition:p_1 _SYMB_12 StructureCondition1:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphIsolatedCond(p_1,p_3); :} 
  | StructureCondition1:p_1  {: RESULT = p_1; :}
;
StructureCondition1 ::= _SYMB_27 VertexStructureCondition:p_2 _SYMB_28  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphPointedCond(p_2); :} 
  | EdgeLabelCondition:p_1 _SYMB_29 StructureCondition2:p_3 _SYMB_2 StructureCondition2:p_5 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphConnectedCond(p_1,p_3,p_5); :}
  | StructureCondition2:p_1  {: RESULT = p_1; :}
;
StructureCondition2 ::= _SYMB_30 GraphExpr:p_2  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphStructureLiteral(p_2); :} 
  | _SYMB_17 StructureCondition:p_2 _SYMB_18  {: RESULT = p_2; :}
;
VertexStructureCondition ::= VertexStructureCondition:p_1 _SYMB_11 VertexStructureCondition1:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexStructureSum(p_1,p_3); :} 
  | VertexStructureCondition1:p_1  {: RESULT = p_1; :}
;
VertexStructureCondition1 ::= VertexStructureCondition1:p_1 _SYMB_12 VertexStructureCondition2:p_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexStructureMult(p_1,p_3); :} 
  | VertexStructureCondition2:p_1  {: RESULT = p_1; :}
;
VertexStructureCondition2 ::= Vertex:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexStructureLiteral(p_1); :} 
  | AtomicFormula:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexStructureVariable(p_1); :}
  | _SYMB_13 VertexStructureCondition2:p_2  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexStructureNegated(p_2); :}
  | _SYMB_1 VertexStructureCondition:p_2 _SYMB_3  {: RESULT = p_2; :}
;
EdgeLabelCondition ::= Edge:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeLabelLiteralCondition(p_1); :} 
  | AtomicFormula:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeLabelAtomicCondition(p_1); :}
;
GroundCondition ::= VertexBuiltin:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexBuiltinExpr(p_1); :} 
  | GraphBuiltin:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.GraphBuiltinExpr(p_1); :}
  | AtomicFormula:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.AtomicCondition(p_1); :}
  | _SYMB_31 GroundCondition:p_2  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.NegatedCondition(p_2); :}
;
VertexBuiltin ::= _SYMB_45 _SYMB_1 VertexExpr:p_3 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.SinkBuiltin(p_3); :} 
  | _SYMB_47 _SYMB_1 VertexExpr:p_3 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.SourceBuiltin(p_3); :}
;
GraphBuiltin ::= _SYMB_39 _SYMB_1 GraphExpr:p_3 _SYMB_3  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EmptyGraphBuiltin(p_3); :} 
;
AtomicFormula ::= _SYMB_49  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Verity(); :} 
  | _SYMB_40  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Absurdity(); :}
  | _SYMB_43  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.Nullity(); :}
;
ListLogicalOrDecl ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListLogicalOrDecl(); :} 
  | LogicalOrDecl:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListLogicalOrDecl(); RESULT.addLast(p_1); :}
  | LogicalOrDecl:p_1 _SYMB_2 ListLogicalOrDecl:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListCondition ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListCondition(); :} 
  | Condition:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListCondition(); RESULT.addLast(p_1); :}
  | Condition:p_1 _SYMB_2 ListCondition:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListVertex ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertex(); :} 
  | Vertex:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertex(); RESULT.addLast(p_1); :}
  | Vertex:p_1 _SYMB_2 ListVertex:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListEdge ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListEdge(); :} 
  | Edge:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListEdge(); RESULT.addLast(p_1); :}
  | Edge:p_1 _SYMB_2 ListEdge:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListVertexActual ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertexActual(); :} 
  | VertexActual:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertexActual(); RESULT.addLast(p_1); :}
  | VertexActual:p_1 _SYMB_2 ListVertexActual:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListEdgeActual ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListEdgeActual(); :} 
  | EdgeActual:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListEdgeActual(); RESULT.addLast(p_1); :}
  | EdgeActual:p_1 _SYMB_2 ListEdgeActual:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListGraphExpr ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListGraphExpr(); :} 
  | GraphExpr:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListGraphExpr(); RESULT.addLast(p_1); :}
  | GraphExpr:p_1 _SYMB_2 ListGraphExpr:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListLIdent ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListLIdent(); :} 
  | LIdent:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListLIdent(); RESULT.addLast(p_1); :}
  | LIdent:p_1 _SYMB_2 ListLIdent:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListBinding ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListBinding(); :} 
  | Binding:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListBinding(); RESULT.addLast(p_1); :}
  | Binding:p_1 _SYMB_7 ListBinding:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListVertexBinding ::=  /* empty */  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertexBinding(); :} 
  | VertexBinding:p_1  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.ListVertexBinding(); RESULT.addLast(p_1); :}
  | VertexBinding:p_1 _SYMB_7 ListVertexBinding:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
Edge ::= _SYMB_32 GraphExpr:p_2 _SYMB_33  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeQuotation(p_2); :} 
  | _SYMB_32 _INTEGER_:p_2 _SYMB_33  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeIntegral(p_2); :}
  | _SYMB_32 _STRING_:p_2 _SYMB_33  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.EdgeString(p_2); :}
;
Vertex ::= _SYMB_34 GraphExpr:p_2 _SYMB_35  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexQuotation(p_2); :} 
  | _SYMB_34 _INTEGER_:p_2 _SYMB_35  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexIntegral(p_2); :}
  | _SYMB_34 _STRING_:p_2 _SYMB_35  {: RESULT = new com.biosimilarity.GraphL.model.GraphL.Absyn.VertexString(p_2); :}
;

